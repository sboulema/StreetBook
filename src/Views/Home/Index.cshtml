@using System.Text.Json;

@model StreetBook.Models.ViewModels.StreetBookViewModel

@{
    ViewData["Title"] = "StreetBook";
}

@await Html.PartialAsync("_Notification")

<div class="row g-3 mx-1 mb-3">
  <div class="col-3">
    <label for="exampleFormControlInput1" class="form-label"><strong>Nr.</strong></label>
    <input id="houseNumberInput" type="number" class="form-control">
  </div>
  <div class="col-9">
    <label for="exampleFormControlInput1" class="form-label"><strong>Info</strong></label>
    <input id="infoInput" type="text" class="form-control">
  </div>
</div>

<table id="streetBookTable">
    <thead>
        <tr>
            <th>Nr.</th>
            <th>Foto</th>
            <th>Info</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model.Persons)
        {
            <tr>
                <td>@person.HouseNumber</td>
                <td>@($"/picture/{person.HouseNumber}_{person.FirstName.ToLower()}")</td>
                <td>
                    <strong>@person.Name</strong>
                    @if (!string.IsNullOrEmpty(person.MobilePhoneNumber))
                    {
                        <br/>
                        @person.MobilePhoneNumber<br/>
                        <a href="tel:@person.MobilePhoneNumber" class="btn btn-outline-primary mt-2"><i class="fa-solid fa-phone"></i></a>
                        <a href="https://wa.me/@person.MobilePhoneNumber" class="btn btn-outline-success mt-2"><i class="fa-brands fa-whatsapp fa-lg"></i></a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Stylesheets
{
    <link rel="stylesheet" href="/css/tabulator_bootstrap5.min.css" />
    <link rel="stylesheet" href="/css/magnific-popup.css" />
}

@section Scripts
{
    <script src="/js/tabulator.min.js"></script>
    <script src="/js/jquery.magnific-popup.min.js"></script>

    <script>
        var table = new Tabulator("#streetBookTable", {
            headerVisible:false,
            responsiveLayout:"hide",
            layout:"fitDataFill",
            height:"100%",
            columns:[
                { title:"Nr.", field:"houseNumber", resizable:false },
                { title:"Foto", field:"photo", resizable:false, responsive:0, formatter:function(cell, formatterParams, onRendered) {                    
                    var image = document.createElement("img");
                    image.setAttribute("src", cell.getValue());
                    image.setAttribute("class", "img-thumbnail");
                    image.style.width = "100px";
                    image.addEventListener("load", function(){
                        cell.getRow().normalizeHeight();
                    });

                    var link = document.createElement("a");
                    link.setAttribute("href", cell.getValue());
                    link.setAttribute("class", "profile-pic");
                    link.appendChild(image);

	                return link;
                }, },
                { title:"Info", field:"info", formatter:"html", resizable:false, responsive:0 },
            ],
            groupBy:"houseNumber",
            groupHeader:function(value, count, data, group){
                return `Huisnummer ${value}`;
            },
        });

        $(document).ready(function() {
            $('.profile-pic').magnificPopup({
                type: 'image'
            });

            document.getElementById("houseNumberInput").addEventListener("input", (event) => {
                removeFilter("houseNumber");
                if (event.target.value !== '') {
                    table.addFilter("houseNumber", "=", event.target.value);
                }
            });
            document.getElementById("infoInput").addEventListener("input", (event) => {
                removeFilter("info");
                if (event.target.value !== '') {
                    table.addFilter("info", "like", event.target.value);
                }
            });
        });

        function removeFilter(field) {
            var filter = table.getFilters().find((filter) => filter.field === field);

            if (filter === undefined) {
                return;
            }

            table.removeFilter(filter.field, filter.type, filter.value);
        }
    </script>
}